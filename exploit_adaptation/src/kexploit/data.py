from pathlib import Path
import requests
import os

def kexploit_base_dir() -> Path:
    path = Path(os.path.abspath(os.environ['KEXPLOIT_DATA_DIR']))
    path.mkdir(parents=True, exist_ok=True)
    return path

# returns a folder used to store files of a certain type
def kexploit_data_dir(name: str) -> Path:
    path = Path(os.path.join(kexploit_base_dir(), name))
    path.mkdir(parents=True, exist_ok=True)
    return path

# folder for storing ghidra projects for kernel analysis
def ghidra_project_dir() -> Path:
    return kexploit_data_dir('kernel_ghidra_projects')

# stores kernel elfs for analyzed kernels
def kernel_elf_dir() -> Path:
    return kexploit_data_dir('kernel_elfs')

# stores bzImages for kernels
def kernel_image_dir() -> Path:
    return kexploit_data_dir('kernel_images')

# stores data related to VM like disk image and initrd
def vm_data_dir() -> Path:
    return kexploit_data_dir('vm_data')

def download_file_if_not_exist(path: Path, url: str):
    if path.exists():
        return
    
    with requests.get(url, stream=True) as r:
        with open(path, 'wb') as f:
            r.raise_for_status()
            for chunk in r.iter_content(chunk_size=8192):
                if chunk:
                    f.write(chunk)

def write_file_if_not_exists(path: Path, data: str):
    if path.exists():
        return
    
    with open(path, 'w') as f:
        f.write(data)
