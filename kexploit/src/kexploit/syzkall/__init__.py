# Pulls buts from syzkaller syzbot and filters for interesting looking ones

from pathlib import Path

from .bug_db import SyzkallBugDatabase
from .scrape import pull_bugs

def pull(kernel_name: str, bug_path: Path):
    db = SyzkallBugDatabase(bug_path)

    try:
        pull_bugs(db, kernel_name)
    finally:
        db.close()

def query(bug_path: Path):
    db = SyzkallBugDatabase(bug_path)
    bugs = db.get_all_bugs()

    for bug in bugs:
        # print(bug.description)
        # print(bug.kernel_name)
        if 'android' not in bug.kernel_name:
            continue
        print(f'{bug.bug_id}: {bug.description}')
        print(bug.crash_time)

def test(id: str, bug_path: Path):
    db = SyzkallBugDatabase(bug_path)
    metadata = db.get_bug_metadata(id)
    if metadata is None:
        print('Invalid bug id supplied')
        return
    
    print(f'Compiling {metadata.description}...')
    metadata.compile_repro(bug_path, 'arm64')