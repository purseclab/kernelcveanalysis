from pathlib import Path

import pyghidra

from .data import ghidra_project_dir

class GhidraInstance:
    def __init__(self, kernel: Path):
        if not pyghidra.started():
            pyghidra.start()
        
        self.kernel_path = kernel
    
    def open_program(self):
        return pyghidra.open_program(
            binary_path=self.kernel_path,
            project_location=ghidra_project_dir(),
            analyze=False,
        )
    
    def analyze(self):
        # import ghidra
        # from ghidra.app.util.headless import HeadlessAnalyzer
        # from ghidra.program.flatapi import FlatProgramAPI
        # from ghidra.base.project import GhidraProject
        # from java.lang import String

        with self.open_program() as flat_api:
            program = flat_api.getCurrentProgram()
            flat_api.analyzeAll(program)
    
    def references_to_address(self, address: int):
        with self.open_program() as flat_api:
            ghidra_address = flat_api.toAddr(address)

            program = flat_api.getCurrentProgram()
            ref_manager = program.getReferenceManager()

            for reference in ref_manager.getReferencesTo(ghidra_address):
                src_address = reference.getFromAddress()
                ref_type = reference.getReferenceType()

                print(f'Reference from {src_address} to {ghidra_address}: {ref_type}')
