#!/usr/bin/env python3

from pwn import *

import os
import sys
import shutil
import argparse

# Place in kernelctf simulator folder to test kernelctf exploits easily

def main():
    parser = argparse.ArgumentParser(
        description="Run exploit binary against specified kernel version."
    )

    parser.add_argument(
        "binary_path",
        type=str,
        help="Path to the exploit binary to run"
    )
    parser.add_argument(
        "kernel_version",
        type=str,
        help="Kernel version to run"
    )

    parser.add_argument(
        "--test-success",
        action="store_true",
        help="Flag to indicate whether to test for success"
    )

    args = parser.parse_args()

    exploit_binary = os.path.abspath(args.binary_path)
    kernel_version = args.kernel_version

    os.chdir(os.path.dirname(os.path.abspath(sys.argv[0])))

    shutil.copyfile(exploit_binary, 'share_file')

    r = process(['./local_runner.sh', kernel_version, '--root'])

    def command(command_str, prefix='# '):
        r.sendlineafter(prefix.encode(), command_str.encode())
        # receive command string we just sent
        r.recvline()

    def command_user(command_str):
        command(command_str, '$ ')

    command('cd /home/user')
    command('cp /dev/vdc exploit')
    command('chmod +x exploit')
    command('chown user:user exploit')
    command('su user')
    command_user('./exploit')

    if args.test_success:
        try:
            command('id')
            result = r.recvline().decode('ascii')

            if 'root' in result.strip():
                print('Exploit succeeded')
                sys.exit(0)
        except EOFError:
            pass

        print('Exploit failed')
        sys.exit(1)
    else:
        r.interactive()


if __name__ == "__main__":
    main()
