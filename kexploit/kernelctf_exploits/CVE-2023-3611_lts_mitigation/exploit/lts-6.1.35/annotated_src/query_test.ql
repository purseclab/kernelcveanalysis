import cpp
import semmle.code.cpp.dataflow.new.DataFlow

module RopFlowConfiguration implements DataFlow::ConfigSig {
 predicate isSource(DataFlow::Node source) {
  source.asExpr().(Literal).toString() in ["18446744071579807875", "18446744071579005420", "18446744071578854764", "18446744071578856661", "18446744071579884869", "18446744071588843867", "18446744071579796995", "18446744071580077868"]
 }

 predicate isSink(DataFlow::Node sink) {
  sink.asExpr() instanceof ArrayAggregateLiteral
 }
}

module RopFlow = DataFlow::Global<RopFlowConfiguration>;

from ArrayAggregateLiteral array, Literal rop_offset, DataFlow::Node source, DataFlow::Node sink
where source.asExpr() = rop_offset
 and sink.asIndirectExpr(1) = array
 // and RopFlow::flow(source, sink)
select array.getLocation(), rop_offset, "Rop used in array"

// from ArrayAggregateLiteral array
// select array.getLocation(), "Rop used in array"

// from Literal l
// where (l.toString() = "18446744071579807875" or l.toString() = "18446744071579005420" or l.toString() = "18446744071578854764" or l.toString() = "18446744071578856661" or l.toString() = "18446744071579884869" or l.toString() = "18446744071588843867" or l.toString() = "18446744071579796995" or l.toString() = "18446744071580077868")
// select l.toString(), "Found if"
